# ---------------------------------------------------------------------------
# model.py
# Created on: Wed Jan 06 2010 04:20:01 PM
#   (generated by ArcGIS/ModelBuilder)
# ---------------------------------------------------------------------------

# Import system modules
import sys, string, os
print "Importing arcpy..."
import arcpy
arcpy.env.overwriteOutput = True
# usage
if len(sys.argv) < 2:
  print "Usage: python getTHLB.py [tsa_number]"
  sys.exit(0)

# System arguments
tsa_number = sys.argv[1]
tsa_number = tsa_number.split('tsa')[1]
if tsa_number.startswith('0'):
    tsa_number = tsa_number[1]
print tsa_number

# ----------------------------------------------------------------------------
def delFC(featureClass):
  if arcpy.Exists(featureClass):
    arcpy.AddMessage("Deleting %s..." % (featureClass))
    arcpy.Delete_management(featureClass)

def getShapeFieldName(inFC):
    """Gets the name of the Geometry area field in a feature class"""
    fieldNames = []
    fields = arcpy.ListFields(inFC)
    for fld in fields:
        fieldNames.append(fld.name.upper())
    if "SHAPE_AREA" in fieldNames:
        return "SHAPE_AREA"
    elif "GEOMETRY_AREA" in fieldNames:
        return "GEOMETRY_AREA"

# ===============================================================================================================
# HARD CODED VARIABLES
RCO = ('38','30','33','44','25','31','39','44','46','47','48')
NIR = ('3','4','41','8','40','10','12','14','16','20','43','24','241','242','243')
SIR = ('23','1','2','5','7','9','11','13','15','18','22','26','27','17','29','45')
if tsa_number in RCO:
  region = 'RCO'
elif tsa_number in NIR:
  region = 'NIR'
elif tsa_number in SIR:
  region = 'SIR'
else:
  print "Invalid tsa number %s" % (tsa_number)
  sys.exit(0)

# Local variables
tsa = "tsa%s" % (tsa_number)
select = "TSA_NUMBER = " + "'" + tsa_number + "'" + "and (THLB_FACT > 0 or CFLB_FACT > 0)"
if len(tsa_number) < 2:
  tsa = "tsa0%s" % (tsa_number)
tempGDB = "t:\\tempTHLBABABABABA.gdb"
tempTHLB = "t:\\tempTHLBABABABABA.gdb\\tempTHLB"
tempTHLB2 = "t:\\tempTHLBABABABABA.gdb\\tempTHLB2"
tempTHLBlyr = "tempTHLBLyr"
tempTHLBlyr2 = "tempTHLBLyr2"
thlbDiss = "t:\\tempTHLBABABABABA.gdb\\tempTHLBdiss"
thlb = "S:/for/vic/hts/ana/workarea/AR2018/units/"+tsa+"/"+tsa+"_2018.gdb/wrk/thlb2018"
# thlb = "t:/units/"+tsa+"/"+tsa+"_2018.gdb/wrk/thlb2018"
THLB_gdb = "S:\\FOR\\VIC\\HTS\\FAIB_DATA_FOR_DISTRIBUTION\\THLB\\Consolidated_THLB.gdb"
THLB_data = tempGDB + "\\"+region+"\\THLB_data_"+region

# ===============================================================================================================
# Copy file geodatabase to T drive
if not arcpy.Exists(tempGDB):
        arcpy.Copy_management(THLB_gdb,tempGDB)
# Deleting existing analysis ready TSA THLB
delFC(thlb)

#Select THLB for TSA and create temp dataset
print "Selecting %s for %s from %s..." % (select,tsa,THLB_data)
arcpy.Select_analysis(THLB_data, tempTHLB, select)

#Repair TSA THLB
arcpy.RepairGeometry_management(tempTHLB)
arcpy.CalculateField_management(tempTHLB,"CFLB_FACT", "round(!CFLB_FACT!, 4)", "PYTHON")
arcpy.CalculateField_management(tempTHLB,"THLB_FACT", "round(!THLB_FACT!, 4)", "PYTHON")
shapeName = getShapeFieldName(tempTHLB)
arcpy.MakeFeatureLayer_management(tempTHLB,tempTHLBlyr,shapeName + " < 5")
try:
    arcpy.Eliminate_management(tempTHLBlyr,tempTHLB2)
except Exception:
    tempTHLB2 = tempTHLB
    print "No Sliver smaller than 5 meteres found"
arcpy.Delete_management(tempTHLBlyr)
arcpy.MakeFeatureLayer_management(tempTHLB2,tempTHLBlyr2,"THLB_FACT > 0 or CFLB_FACT > 0")
arcpy.Dissolve_management(tempTHLBlyr2, thlbDiss, ["THLB_FACT", "CFLB_FACT", "TSA_NAME", "TSA_NUMBER","TSR_VERSION","TSR_REPORT_DATE"],"", "SINGLE_PART")

#Calculate Area Fields
arcpy.AddField_management(thlbDiss,"area_ha","DOUBLE")
arcpy.AddField_management(thlbDiss,"thlb_ha","DOUBLE")
shapeName = getShapeFieldName(thlbDiss)
arcpy.CalculateField_management(thlbDiss,"area_ha", "!" + shapeName + "!/10000", "PYTHON")
arcpy.CalculateField_management(thlbDiss,"thlb_ha", "(!" + shapeName + "!/10000) * !THLB_FACT!", "PYTHON")

print "Populating thlb2018_fid"
arcpy.AddField_management(thlbDiss, "thlb2018_fid", "LONG")
rows = arcpy.UpdateCursor(thlbDiss)
row = rows.next()
n = 1
while row:
  row.thlb2018_fid = n
  rows.updateRow(row)
  row = rows.next()
  n = n + 1


#Copy feature class to Units directory
arcpy.CopyFeatures_management(thlbDiss, thlb)

#Cleanup fields
arcpy.Delete_management(tempTHLB)
arcpy.Delete_management(tempTHLB2)
arcpy.Delete_management(thlbDiss)
arcpy.Delete_management(tempTHLBlyr2)