# ---------------------------------------------------------------------------
# model.py
# Created on: Wed Jan 06 2010 04:20:01 PM
#   (generated by ArcGIS/ModelBuilder)
# ---------------------------------------------------------------------------

import sys, string, os, arcpy
arcpy.env.overwriteOutput = True

def main():
    logFileName = "T:/thlb.log"
    logFile = file(logFileName, "w")
    tsaNums = sys.argv[1]
    root  = sys.argv[2]
    year  = str(sys.argv[3])
    inTHLB = sys.argv[4]
    tsas = []
    fileListToArray(tsas,tsaNums)
    arcpy.env.overwriteOutput = True

    # get path of input FC
    list= inTHLB.split("\\")[0:-1]
    delim = "\\"
    thlbGDB = delim.join(list)
    print thlbGDB

    gdbName = "tempTHLBABABABABA.gdb"
    tempGDB = "t:\\tempTHLBABABABABA.gdb"
    tempTHLB = "t:\\tempTHLBABABABABA.gdb\\tempTHLB"

    if arcpy.Exists(tempGDB):
        arcpy.Delete_management(tempGDB)

    # Copy file geodatabase to T drive
    if not arcpy.Exists(tempGDB):
        arcpy.Copy_management(thlbGDB,tempGDB)

    src = tempGDB + "\\" + inTHLB.split("\\")[-1]
    srcLyr = "srcLyr"
    arcpy.MakeFeatureLayer_management(src,srcLyr)

    for tsa in tsas:
        rootTSAgdb = root  + "\\" + tsa + "\\" + tsa + "_" + year + ".gdb"
        rootTSAgdbTHLB = rootTSAgdb + "\\src\\thlb_" + year
        tsa_number = string.replace(tsa,"tsa","")
        if tsa_number.startswith('0'):
            tsa_number = tsa_number[1]
        print tsa_number
        bnd = rootTSAgdb + "\\wrk\\bnd"

        select = "TSA_NUMBER = " + tsa_number  + " and (THLB_FACT > 0 or CFMLB_FACT > 0)"
        print select

        # Deleting existing analysis ready TSA THLB
        delFC(rootTSAgdbTHLB)

        #Select THLB for TSA and create temp dataset
        print "Selecting %s for %s from %s..." % (select,tempTHLB,src)
        arcpy.SelectLayerByAttribute_management(srcLyr,"NEW_SELECTION", select )

        arcpy.CopyFeatures_management(srcLyr, tempTHLB)
        arcpy.RepairGeometry_management(tempTHLB)

        #Clip and copy fc to Units directory
        arcpy.AddMessage("Clipping...")
        print"output is " + rootTSAgdbTHLB
        arcpy.Clip_analysis(tempTHLB,bnd,rootTSAgdbTHLB)


    print "Elapsed time: %d seconds" % (time.clock())
    logFile.close()


### ----------------------------------------------------------------------------
def delFC(featureClass):
  if arcpy.Exists(featureClass):
    arcpy.AddMessage("Deleting %s..." % (featureClass))
    arcpy.Delete_management(featureClass)
##
def getShapeFieldName(inFC):
    """Gets the name of the Geometry area field in a feature class"""
    fieldNames = []
    fields = arcpy.ListFields(inFC)
    for fld in fields:
        fieldNames.append(fld.name.upper())
    if "SHAPE_AREA" in fieldNames:
        return "SHAPE_AREA"
    elif "GEOMETRY_AREA" in fieldNames:
        return "GEOMETRY_AREA"
##
def fileListToArray(inArray, inFile):
    inFile =  open( inFile, "r")
    for line in inFile:
        if not line.strip():
            break
        dataset = line.strip()
        inArray.append(dataset)
    inFile.close()

if __name__ == '__main__':
    main()


